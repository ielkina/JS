//Функции
"use strict";
let num = 20; /*глобальная переменная*/
function showFirstMessage(text) {
    /*название функции 
       должно соответствовать действию название 
       функции пишется в формате CamelCase*/
    console.log(text);
    /*num = 10; /* используемая переменная внутри функции - глобальная*/
    let num = 10;
    /* локальная переменная - сущ. внутри функции.
       переменные существуют внутри
       скобок/блока */
    console.log(num);
    /*(выведет в консоль локальную переменную) 
    В случае отсутствия локальной переменной console.log
    будет искать переменную вне функции(глобальную переменную)
    замыкание функции - ищет переменную внутри 
    функции/блока, при отсутствии вне функции/блока на уровень выше
    (глобальная переменная). 
    Замыкание функции - это сама функция со всеми внешними переменными
    которые ей доступны! */

}
showFirstMessage('Hello World!'); /*вызов функции обязательное действие*/
console.log(num);
/*(выведет в консоль глобальную переменную)
код обратиться к глобальной переменной.
Результат в консоли будет 2 переменные 
глобальная и локальная т.е 2 числа 20 и 10*/

// console.log(calc(4, 3));
// console.log(calc(5, 6));
// console.log(calc(10, 6));

// function calc(a, b) {
//     return (a + b);
// }


function ret() {
    let num = 50;
    //

    return num;
}
const anotherNum = ret();
console.log(anotherNum);

const logger = function() {
    console.log('Hello!');
};
logger();
const calc = (a, b) => {
    console.log('1');
    return a + b;
};
/*

ЗАДАЧИ

1.Обязателен ли "else"?
Следующая функция возвращает true, если параметр age больше 18.
В ином случае она запрашивает подтверждение через confirm и возвращает его результат:*/
function checkAge(age) {
    if (age > 18) {
        return true;
    } else {
        // ...
        return confirm('Родители разрешили?');
    }
}
/*
 Будет ли эта функция работать как-то иначе, если убрать else? */
function checkAge(age) {
    if (age > 18) {
        return true;
    }
    // ...
    return confirm('Родители разрешили?');
}
/*
  Есть ли хоть одно отличие в поведении этого варианта? 
  РЕШЕНИЕ
  Оба варианта функций работают одинаково, отличий нет.

2. Перепишите функцию, используя оператор '?' или '||'
Следующая функция возвращает true, если параметр age больше 18.
В ином случае она задаёт вопрос confirm и возвращает его результат.*/
function checkAge(age) {
    if (age > 18) {
        return true;
    } else {
        return confirm('Родители разрешили?');
    }
}
/*
Перепишите функцию, чтобы она делала то же самое, но без if, в одну строку.
Сделайте два варианта функции checkAge:
Используя оператор ?
Используя оператор ||
РЕШЕНИЕ
Используя оператор ?: */
function checkAge(age) {
    return (age > 18) ? true : confirm('Родители разрешили?');
}
/*
Используя оператор || (самый короткий вариант): */
function checkAge(age) {
    return (age > 18) || confirm('Родители разрешили?');
}
/*
Обратите внимание, что круглые скобки вокруг age > 18 не 
обязательны. Они здесь для лучшей читаемости кода.

3. Функция min(a, b)
Напишите функцию min(a,b), которая возвращает меньшее из чисел a и b.
Пример вызовов: */
min(2, 5) == 2
min(3, -1) == -1
min(1, 1) == 1
    /*
РЕШЕНИЕ
Вариант решения с использованием if:*/
function min(a, b) {
    if (a < b) {
        return a;
    } else {
        return b;
    }
}
/*
Вариант решения с оператором ?: */
function min(a, b) {
    return a < b ? a : b;
}
/*
P.S. В случае равенства a == b не имеет значения, что возвращать.

4. Функция pow(x,n)
Напишите функцию pow(x,n), которая возвращает x в степени n. Иначе говоря,
 умножает x на себя n раз и возвращает результат.*/
pow(3, 2) = 3 * 3 = 9
pow(3, 3) = 3 * 3 * 3 = 27
pow(1, 100) = 1 * 1 * ...*1 = 1
    /*
Создайте страницу, которая запрашивает x и n, а затем выводит результат pow(x,n).
P.S. В этой задаче функция обязана поддерживать только натуральные значения n,
 т.е. целые от 1 и выше.
 РЕШЕНИЕ*/
function pow(x, n) {
    let result = x;

    for (let i = 1; i < n; i++) {
        result *= x;
    }

    return result;
}

let x = prompt("x?", '');
let n = prompt("n?", '');

if (n < 1) {
    alert(`Степень ${n} не поддерживается, используйте натуральное число`);
} else {
    alert(pow(x, n));
}