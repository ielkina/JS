/*Переманные и строгий режим*/
"use strict";
/*обозначает что работа с документом ведется в новом формате
Переменный - много коробочек в которых что то лежит.
Есть три способа объявить переменную: 
1. способ объявления переменной: */
let number = 5; /*let переменная изменяемая*/
let NUmber = 5;
/* NUmber (различите в написание переменной)
это уже другая переменная number
= знак присваивания (что то берем и кладем в коробку/переменную).
2. способ объявление переменной: */
const leftBorderWidth = 1;
/* const значение не меняет 
Написанная переменная в формате CamelCase.
Имена переменной должны состоять из букв,
цифр (не первый символ название переменной),
нижнее подчеркивание и символом доллара. А так же не должны совпадать с 
техническими(зарезервированными) именами языка таких как 
error, alert и.тд.*/
number = 10; /*перезаписанное переменной let*/
/* обращение к переменной Number, значение переменной
отличается и не считается ошибкой так как это тип переменной let*/
console.log(number);
/*console.log выведет результат новой переменной 
number т.е 10 */
/*leftBorderWidth = 10;*/
/*обращение к переменной const, будет считаться 
ошибкой так как const не является изменяемым значением
и код не выведется в консоль*/
const obj = {
    a: 50
};
obj.a = 10;
console.log(obj);
/*Прямых констант в JS не бывает!!!
Данный отрезок кода показывает, что при написание константы таким образом ее
можно изменять!!*/

/*Старое написание JS файлов*/
/*Устаревший вариант задавание переменной
НЕ ИСПОЛЬЗОВАТЬ В НАПИСАНИЕ КОДА!!!!*/
console.log(name);
/*переменная var существует еще до того как ее объявили в коде
и она видна везде. Использование переменной до того как она объявленная 
называется Хойстинг.*/
var name = 'Ivan';
name = 'Alex'; /*перезаписанное переменной var*/ {
    let result = 50; /*будет считаться ошибкой*/
    /*const result = 50; /* тоже будет считаться ошибкой*/
    var numb = 50; /*не будет считаться ошибкой и к переменной есть доступ*/
}
// console.log(result);
console.log(numb);

/* Новый стандарт JS не поддерживается в старых версиях браузеров.
Для проверки рентабельности кода можно его протестировать на сервисе 
Can I Use. Т.е если необходимо написать код для старых браузеров 
необходимо использовать var. А так же есть специальные технологии которы
 переводят новый стандарт в старый.
Для объявление в документе нового/современного режима стандарта в коде в
 начале документа прописывается  'use strict'.
 */
// a = 15; /*в старом формате можно использовать переменную без объявления*/
/*console.log(a); /*если закомментировать 'use strict' в консоль выведется 
15, в обратном случае это будет считаться ошибкой. Стилистика написание кода 
строго регламентируется. Одним из Важных аспектов написание Точка с запятой. 
*/