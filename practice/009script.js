/*Операторы в JS*/
"use strict";
/* Конкатенация (+) прибавление двух строк */
console.log('arr' + " - object");
console.log(4 + " - object");

//console.log(4 + +"5"); /*унарный плюс (+) - дополнительный плюс */
//console.log(4 + +" - object");
/*NaN Ошибка Команда 
не подлежите логическим действиям число не может быть прибавлено к строке*/

let incr = 10,
    decr = 10;
/*При объявлении нескольких переменных нужно объявлять через 
запятую а уж потом в конце ставиться точка с запятой.*/
incr++; // постфиксный инкремент - увеличение на единицу
decr--; //постфиксный декремент - уменьшение на единицу
console.log(incr); /*11 (10 увеличилась на 1)*/
console.log(decr); /*9 (10 уменьшилась на 1)*/
//++incr // префиксные
//--decr // префиксные 
console.log(incr); //11
console.log(decr); // 9
console.log(incr++); //10 
console.log(decr--); // 10 
/*использование постфиксной формы прямо сразу возвращает старое значение а уж
потом увеличивает или уменьшает */
console.log(++incr); /* 11 префиксное */
console.log(--decr); /* 9 префиксное */

console.log(5 % 2); //в консоли выведется остаток от деления т.е 1

console.log(2 * 4 == 8);
/* Если используется знак равно (=)один раз то это  
присваивание, если два раза (==) то это сравнение. Если три раза (===) то 
это уже строгое сравнение. в консоли выведется true т.е 2*4=8 что соответствует 
равенству 8, такой же результат будет при строчном типе данных т.е 2*4=="8"
(true) сравнение по значению. Если сравнивать по типу данных то используется 
уже строгое сравнение (===)!!!!!!!
&& оператор - и
|| оператор - или */
const isChecked = true,
    isClose = true;
console.log(isChecked && isClose);
/* true т.к оба оператора имеют значение true. если один 
из операторов дует false то и в консоли будет false. */
console.log(isChecked || isClose);
/* в консоли будет результат true т.е в аргументах 
хотя бы одна переменная имеет значение true, если оба значение 
false то консоль выведет false так как оба значения false.*/
console.log(isChecked || !isClose);
/* если оба оператора имеют значение false но у одного 
оператора стоит ! - оператор отрицания, то и консоль выведет 
значение true так как одно из значений окажется true
Порядок выполнения операторов.
*/
console.log(2 + 2 * 2 != 8);
/*true (!=   оператор не равенства, !==  строгое 
сравнение не равенства по типу).*/

console.log(2 + 2 * 2 === 8); //false

/*в первую очередь выполняется оператор умножение (4)
а затем прибавление (2+(4)=6) т.е 6 не равно 8 
что не есть правдой. Оператор умножения приоритет больше чем у  оператора сложения.
Таблица приоритета операторов: 
https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/Operator_Precedence */